```{r, warning=FALSE, message=FALSE}
library(randomForest)
OU_Forest = randomForest(Flipped ~ ., data = Train, ntree=200, nodesize=25 )
```
### **CONFUSION MATRIX**
```{r, warning=FALSE, message=FALSE}
PredictForest = predict(OU_Forest, newdata = Test)
confusionMatrix(data = PredictForest, reference = Test$Flipped)
```


```{r, warning=FALSE, message=FALSE}
search_grid = expand.grid(.mtry = c(1:6)) # by expand.grid we can only tune mtry, ntree and nodesize should directly be passed to train
train(Flipped ~ ., data = Train, method = "rf", trControl = numFolds, tuneGrid = search_grid, ntree=200, nodesize=25 )
```
```{r}
feature_importance <- importance(OU_Forest)
print(feature_importance)
```

```{r, warning=FALSE, message=FALSE}
predicted_probabilities_FOREST <- predict(OU_Forest, newdata = Test, type = "prob")[, "1"]
roc_obj_FOREST <- roc(Test$Flipped, predicted_probabilities_FOREST)
auc_value_FOREST <- auc(roc_obj_FOREST)
plot(roc_obj_FOREST, main = "ROC Curve", col = "blue", lwd = 2)
auc_value_FOREST
```
